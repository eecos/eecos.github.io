<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Springcloud2.0脚手架]]></title>
    <url>%2F2018%2F10%2F28%2FSpringcloud2-0%E8%84%9A%E6%89%8B%E6%9E%B6%2F</url>
    <content type="text"><![CDATA[Springcloud2.0 脚手架（本人收集的资料） 基于SpringCloud Finchley.RELEASE的微服务开发脚手架脚手架地址 我喜欢的两个案例项目，主要区别是数据库采用不同 JetfireCloud采用数据库postgresql，基于SpringCloud Finchley.RELEASE的微服务开发脚手架，整合了spring-security-oauth2、springboot-admin、feign、hystrix、spring-cloud-gateway、turbine等全家桶（源码地址），值得去研究一下。 springCloud，springCloud学习 环境：jdk1.8；spring boot2.0.3；spring cloud（Finchley.RELEASE版本）;Maven3.3 目录： 1.1版本选择及快速构建2.1服务注册与发现-Eureka Server 2.2服务提供方及健康检查设置-Eureka Discovery 3.1服务消费者-Ribbon 3.2服务消费者-Feign 4.1服务容错-Hystrix 4.2Hystrix监控面板-Hystrix Dashboard 4.3Hystrix监控数据集群-Turbine 5.1服务网关-Zuul 6.1全链路追踪-Sleuth 6.2全链路追踪监控-Zipkin 6.3全链路追踪监控-Zipkin(mysql数据库) 7.1分布式配置中心。（源码地址） 案例项目三源码 案例项目四源码 案例项目五源码 案例项目六源码 案例项目七源码 非常不错的项目，我很喜欢,包含前后台Taroco-UI,Taroco 更多关于macdown语法编写请看文章 Welcome to your visit.]]></content>
      <categories>
        <category>分布式架构</category>
      </categories>
      <tags>
        <tag>springcloud</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[redis教程（一）]]></title>
    <url>%2F2018%2F10%2F28%2Fredis%E6%95%99%E7%A8%8B%EF%BC%88%E4%B8%80%EF%BC%89%2F</url>
    <content type="text"><![CDATA[#redis教程一、启动Redis服务器步骤： 1）.进入到Redis src目录下 2）.启动redis-server，后台线程redis-server /usr/local/redis/etc/redis.conf 3）.查看是否启动ps axu|grep redis 出现如下界面说明已启动成功jerry 7089 0.2 0.5 4678636 79076 ?? S 1:49下午 0:02.57/Applications/Thunder.app/Contents/MacOS/Thunder http://download.redis.io/releases/redis-2.8.3.tar.gz https://www.cnblogs.com/micro-chen/p/5733113.html DownloadByChromeBrowser jerry 1055 0.0 0.0 4313736 2188 ?? S 1:04下午 0:02.48/usr/local/bin/redis-server *:6379 jerry 7108 0.0 0.0 4267768 900 s000 S+ 1:55下午 0:00.00 grep redis 4）.关闭Redis服务器redis-cli shutdown 5）.查看是否关闭成功ps axu|grep redis 出现如下界面说明关闭成功jerry 7089 0.1 0.5 4678636 79076 ?? S 1:49下午 0:02.64 /Applications/Thunder.app/Contents/MacOS/Thunder http://download.redis.io/releases/redis-2.8.3.tar.gz https://www.cnblogs.com/micro-chen/p/5733113.html DownloadByChromeBrowser jerry 7111 0.0 0.0 4267768 900 s000 S+ 1:56下午 0:00.00 grep redis 二、启动客户端 默认启动使用命令redis-cli启动客户端，按照默认配置连接Redis（127.0.0.1:6379)指定地址和端口号,使用命令redis-cli -h 127.0.0.1 -p 6379备注：进入redis-cli后，可用quit 进行退出 三、关闭客户端交互模式使用quit例如：redis apple$ redis-cli 1.简单使用set、get命令127.0.0.1:6379&gt; set key value12OK 127.0.0.1:6379&gt; get key“value12”2.退出127.0.0.1:6379&gt; quitredis apple$ 四、Redis 密码设置和查看密码的方法redis没有实现访问控制这个功能，但是它提供了一个轻量级的认证方式，可以编辑redis.conf配置来启用认证。 1、初始化Redis密码：在配置文件中有个参数： requirepass 这个就是配置redis访问密码的参数；比如 requirepass test123；（Ps:需重启Redis才能生效）redis的查询速度是非常快的，外部用户一秒内可以尝试多大150K个密码；所以密码要尽量长（对于DBA 没有必要必须记住密码）； 2、不重启Redis设置密码：在配置文件中配置requirepass的密码（当redis重启时密码依然有效）。redis 127.0.0.1:6379&gt; config set requirepass test123 查询密码：redis 127.0.0.1:6379&gt; config get requirepass(error) ERR operation not permitted 密码验证：redis 127.0.0.1:6379&gt; auth test123 &lt;/br&gt;OK &lt;/br&gt; 再次查询：redis 127.0.0.1:6379&gt; config get requirepass1)&quot;requirepass&quot;2) &quot;test123&quot;PS：如果配置文件中没添加密码 那么redis重启后，密码失效； 3、登陆有密码的Redis：在登录的时候的时候输入密码：redis-cli -p 6379 -a test123 先登陆后验证： redis-cli -p 6379 redis 127.0.0.1:6379&gt; auth test123 OK AUTH命令跟其他redis命令一样，是没有加密的；阻止不了攻击者在网络上窃取你的密码； 认证层的目标是提供多一层的保护。如果防火墙或者用来保护redis的系统防御外部攻击失败的话，外部用户如果没有通过密码认证还是无法访问redis的。]]></content>
      <categories>
        <category>环境配置</category>
      </categories>
      <tags>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[maven本地仓库打包（一）]]></title>
    <url>%2F2018%2F10%2F28%2Fmaven%E6%9C%AC%E5%9C%B0%E4%BB%93%E5%BA%93%E6%89%93%E5%8C%85%EF%BC%88%E4%B8%80%EF%BC%89%2F</url>
    <content type="text"><![CDATA[maven将jar手动打入本地仓库 mvn install:install-file -DgroupId=com.microsoft.sqlserver -DartifactId=sqljdbc4 -Dversion=4.0 -Dpackaging=jar -Dfile=/Users/a11130321050035/sqljdbc4-4.0.jar以上命令详解如下：-Dfile= jar路径-Dversion= pom.xml中的版本号-DartifactId=pom.xml中的artifactId -DgroupId=pom.xml中的groupId​ com.microsoft.sqlserver​ sqljdbc4​ 4.0​]]></content>
      <categories>
        <category>认识与提升</category>
      </categories>
      <tags>
        <tag>maven</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[rabbitmq教程（一）]]></title>
    <url>%2F2018%2F10%2F28%2Frabbitmq%E6%95%99%E7%A8%8B%EF%BC%88%E4%B8%80%EF%BC%89%2F</url>
    <content type="text"><![CDATA[启动rabbitmq教程 进入安装目录cd /usr/local/Cellar/rabbitmq/3.7.8 启动 brew services start rabbitmq 当前窗口启动rabbitmq-server 启动一sudo rabbitmq-server 关闭rabbitmqctl stop_app 重置rabbitmqctl reset 启动二rabbitmqctl start_app 报错解决方案：chown rabbitmq:rabbitmq /var/lib/rabbitmq/.erlang.cookiechown rabbitmq:rabbitmq ~/.erlang.cookie]]></content>
      <categories>
        <category>环境配置</category>
      </categories>
      <tags>
        <tag>rabbitmq</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Mac环境下mysql服务无法正常启动]]></title>
    <url>%2F2018%2F10%2F28%2FMac%E7%8E%AF%E5%A2%83%E4%B8%8Bmysql%E6%9C%8D%E5%8A%A1%E6%97%A0%E6%B3%95%E6%AD%A3%E5%B8%B8%E5%90%AF%E5%8A%A8%2F</url>
    <content type="text"><![CDATA[sudo chown -RL root:mysql /usr/local/mysql sudo chown -RL mysql:mysql /usr/local/mysql/data sudo /usr/local/mysql/support-files/mysql.server start]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
      </tags>
  </entry>
</search>
