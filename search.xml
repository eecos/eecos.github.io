<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>Springcloud2.0脚手架</title>
      <link href="/2018/10/28/Springcloud2-0%E8%84%9A%E6%89%8B%E6%9E%B6/"/>
      <url>/2018/10/28/Springcloud2-0%E8%84%9A%E6%89%8B%E6%9E%B6/</url>
      
        <content type="html"><![CDATA[<p>Springcloud2.0 脚手架（本人收集的资料）<br><a id="more"></a></p><blockquote><ul><li><strong>基于SpringCloud Finchley.RELEASE的微服务开发脚手架<a href="https://ruby.ctolib.com/article/compares/92933" target="_blank" rel="noopener">脚手架地址</a></strong></li></ul></blockquote><h1 id="我喜欢的两个案例项目，主要区别是数据库采用不同"><a href="#我喜欢的两个案例项目，主要区别是数据库采用不同" class="headerlink" title="我喜欢的两个案例项目，主要区别是数据库采用不同"></a>我喜欢的两个案例项目，主要区别是数据库采用不同</h1><blockquote><ul><li>JetfireCloud采用数据库postgresql，基于SpringCloud Finchley.RELEASE的微服务开发脚手架，整合了spring-security-oauth2、springboot-admin、feign、hystrix、spring-cloud-gateway、turbine等全家桶（<a href="https://github.com/jorrellz/JetfireCloud" target="_blank" rel="noopener">源码地址</a>），值得去研究一下。</li></ul></blockquote><blockquote><ul><li>springCloud，springCloud学习 环境：jdk1.8；spring boot2.0.3；spring cloud（Finchley.RELEASE版本）;Maven3.3 目录： 1.1版本选择及快速构建2.1服务注册与发现-Eureka Server 2.2服务提供方及健康检查设置-Eureka Discovery 3.1服务消费者-Ribbon 3.2服务消费者-Feign 4.1服务容错-Hystrix 4.2Hystrix监控面板-Hystrix Dashboard 4.3Hystrix监控数据集群-Turbine 5.1服务网关-Zuul 6.1全链路追踪-Sleuth 6.2全链路追踪监控-Zipkin 6.3全链路追踪监控-Zipkin(mysql数据库) 7.1分布式配置中心。（<a href="https://github.com/cc6688211/springCloud" target="_blank" rel="noopener">源码地址</a>）</li><li>案例项目三<a href="https://github.com/jorrellz/JetfireCloud" target="_blank" rel="noopener">源码</a></li><li>案例项目四<a href="https://gitee.com/lwydyby/springcloud-adplatform" target="_blank" rel="noopener">源码</a></li><li>案例项目五<a href="https://github.com/zhuwj921/spring-cloud-framework/tree/master" target="_blank" rel="noopener">源码</a></li><li>案例项目六<a href="https://gitee.com/zkane/spring-cloud-demo" target="_blank" rel="noopener">源码</a></li><li>案例项目七<a href="https://github.com/cc6688211/springCloud" target="_blank" rel="noopener">源码</a></li><li>非常不错的项目，我很喜欢,包含前后台<a href="https://github.com/liuht777/Taroco-UI-NEW" target="_blank" rel="noopener">Taroco-UI</a>,<a href="https://github.com/liuht777/Taroco/tree/master" target="_blank" rel="noopener">Taroco</a></li></ul></blockquote><blockquote><p> <a href="https://daringfireball.net/" target="_blank" rel="noopener">更多关于macdown语法编写请看文章</a></p><pre><code>Welcome to your visit.</code></pre></blockquote>]]></content>
      
      
      <categories>
          
          <category> 分布式架构 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> springcloud </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>redis教程（一）</title>
      <link href="/2018/10/28/redis%E6%95%99%E7%A8%8B%EF%BC%88%E4%B8%80%EF%BC%89/"/>
      <url>/2018/10/28/redis%E6%95%99%E7%A8%8B%EF%BC%88%E4%B8%80%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p>#redis教程<br><a id="more"></a><br>一、启动Redis服务器步骤：</p><blockquote><ul><li>1）.进入到Redis  src目录下</li><li>2）.启动redis-server，后台线程<br>redis-server /usr/local/redis/etc/redis.conf</li><li>3）.查看是否启动<br><code>ps axu|grep redis</code>  出现如下界面说明已启动成功<br><code>jerry             7089   0.2  0.5  4678636  79076   ??  S     1:49下午   0:02.57</code><br><code>/Applications/Thunder.app/Contents/MacOS/Thunder http://download.redis.io/releases/redis-2.8.3.tar.gz https://www.cnblogs.com/micro-chen/p/5733113.html DownloadByChromeBrowser jerry             1055   0.0  0.0  4313736   2188   ??  S     1:04下午   0:02.48</code><br><code>/usr/local/bin/redis-server *:6379jerry             7108   0.0  0.0  4267768    900 s000  S+    1:55下午   0:00.00 grep redis</code></li><li>4）.关闭Redis服务器<br><code>redis-cli shutdown</code></li><li>5）.查看是否关闭成功<br><code>ps axu|grep redis</code>  出现如下界面说明关闭成功<br><code>jerry             7089   0.1  0.5  4678636  79076   ??  S     1:49下午   0:02.64 /Applications/Thunder.app/Contents/MacOS/Thunder http://download.redis.io/releases/redis-2.8.3.tar.gz https://www.cnblogs.com/micro-chen/p/5733113.html DownloadByChromeBrowser jerry             7111   0.0  0.0  4267768    900 s000  S+    1:56下午   0:00.00 grep redis</code></li></ul></blockquote><p>二、启动客户端</p><ul><li>默认启动<br>使用命令redis-cli启动客户端，按照默认配置连接Redis（127.0.0.1:6379)<br>指定地址和端口号,使用命令<br><br><code>redis-cli -h 127.0.0.1 -p 6379</code><br><br>备注：进入redis-cli后，可用quit 进行退出</li></ul><p>三、关闭客户端<br>交互模式使用quit<br><br>例如：<br>redis apple$ redis-cli <br><br>1.简单使用set、get命令<br><br>127.0.0.1:6379&gt; set key value12<br>OK  <br><br>127.0.0.1:6379&gt; get key<br>“value12”<br><br><br>2.退出<br>127.0.0.1:6379&gt; quit<br><br>redis apple$ </p><p>四、Redis 密码设置和查看密码的方法<br>redis没有实现访问控制这个功能，但是它提供了一个轻量级的认证方式，可以编辑redis.conf配置来启用认证。</p><blockquote><ul><li>1、初始化Redis密码：<br><br>在配置文件中有个参数： requirepass  这个就是配置redis访问密码的参数；<br><br>比如 requirepass test123；<br><br>（Ps:需重启Redis才能生效）<br><br>redis的查询速度是非常快的，外部用户一秒内可以尝试多大150K个密码；所以密码要尽量长（对于DBA 没有必要必须记住密码）；</li></ul></blockquote><blockquote><ul><li><p>2、不重启Redis设置密码：<br><br>在配置文件中配置requirepass的密码（当redis重启时密码依然有效）。<br><br><code>redis 127.0.0.1:6379&gt; config set requirepass test123</code></p><p>查询密码：<br><br><code>redis 127.0.0.1:6379&gt; config get requirepass</code><br><br><code>(error) ERR operation not permitted</code><br></p><p>密码验证：<br><br><code>redis 127.0.0.1:6379&gt; auth test123 &lt;/br&gt;</code><br><code>OK &lt;/br&gt;</code></p><p>再次查询：<br><br><code>redis 127.0.0.1:6379&gt; config get requirepass</code><br><br>1)<code>&quot;requirepass&quot;</code><br><br>2) <code>&quot;test123&quot;</code><br><br>PS：如果配置文件中没添加密码 那么redis重启后，密码失效；</p></li><li>3、登陆有密码的Redis：<br><br>在登录的时候的时候输入密码：<br><br><code>redis-cli -p 6379 -a test123</code></li></ul></blockquote><blockquote><p> 先登陆后验证：<br><br>   <code>redis-cli -p 6379</code><br><br>   <code>redis 127.0.0.1:6379&gt; auth test123   OK</code></p></blockquote><p>   AUTH命令跟其他redis命令一样，是没有加密的；阻止不了攻击者在网络上窃取你的密码；<br><br>   认证层的目标是提供多一层的保护。如果防火墙或者用来保护redis的系统防御外部攻击失败的话，外部用户如果没有通过密码认证还是无法访问redis的。</p>]]></content>
      
      
      <categories>
          
          <category> 环境配置 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Redis </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>maven本地仓库打包（一）</title>
      <link href="/2018/10/28/maven%E6%9C%AC%E5%9C%B0%E4%BB%93%E5%BA%93%E6%89%93%E5%8C%85%EF%BC%88%E4%B8%80%EF%BC%89/"/>
      <url>/2018/10/28/maven%E6%9C%AC%E5%9C%B0%E4%BB%93%E5%BA%93%E6%89%93%E5%8C%85%EF%BC%88%E4%B8%80%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p>maven将jar手动打入本地仓库<br><a id="more"></a></p><h2 id="mvn-install-install-file-DgroupId-com-microsoft-sqlserver-DartifactId-sqljdbc4-Dversion-4-0-Dpackaging-jar-Dfile-Users-a11130321050035-sqljdbc4-4-0-jar"><a href="#mvn-install-install-file-DgroupId-com-microsoft-sqlserver-DartifactId-sqljdbc4-Dversion-4-0-Dpackaging-jar-Dfile-Users-a11130321050035-sqljdbc4-4-0-jar" class="headerlink" title="mvn install:install-file -DgroupId=com.microsoft.sqlserver -DartifactId=sqljdbc4 -Dversion=4.0 -Dpackaging=jar -Dfile=/Users/a11130321050035/sqljdbc4-4.0.jar"></a>mvn install:install-file -DgroupId=com.microsoft.sqlserver -DartifactId=sqljdbc4 -Dversion=4.0 -Dpackaging=jar -Dfile=/Users/a11130321050035/sqljdbc4-4.0.jar</h2><p>以上命令详解如下：<br>-Dfile= jar路径<br>-Dversion= pom.xml中的版本号<br>-DartifactId=pom.xml中的artifactId</p><h2 id="DgroupId-pom-xml中的groupId"><a href="#DgroupId-pom-xml中的groupId" class="headerlink" title="-DgroupId=pom.xml中的groupId"></a>-DgroupId=pom.xml中的groupId</h2><dependency><br>​      <groupid>com.microsoft.sqlserver</groupid><br>​      <artifactid>sqljdbc4</artifactid><br>​      <version>4.0</version><br>​    </dependency>]]></content>
      
      
      <categories>
          
          <category> 认识与提升 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> maven </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>rabbitmq教程（一）</title>
      <link href="/2018/10/28/rabbitmq%E6%95%99%E7%A8%8B%EF%BC%88%E4%B8%80%EF%BC%89/"/>
      <url>/2018/10/28/rabbitmq%E6%95%99%E7%A8%8B%EF%BC%88%E4%B8%80%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p>启动rabbitmq教程<br><a id="more"></a><br> 进入安装目录<br><code>cd /usr/local/Cellar/rabbitmq/3.7.8</code></p><h1 id="启动"><a href="#启动" class="headerlink" title="启动  "></a>启动  </h1><p><code>brew services start rabbitmq</code>  </p><h1 id="当前窗口启动"><a href="#当前窗口启动" class="headerlink" title="当前窗口启动"></a>当前窗口启动</h1><p><code>rabbitmq-server</code></p><p>启动一<br><code>sudo rabbitmq-server</code></p><p>关闭<br><code>rabbitmqctl stop_app</code></p><p>重置<br><code>rabbitmqctl reset</code></p><p>启动二<br><code>rabbitmqctl start_app</code></p><ul><li>报错解决方案：<br>chown rabbitmq:rabbitmq /var/lib/rabbitmq/.erlang.cookie<br>chown rabbitmq:rabbitmq ~/.erlang.cookie</li></ul>]]></content>
      
      
      <categories>
          
          <category> 环境配置 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> rabbitmq </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Mac环境下mysql服务无法正常启动</title>
      <link href="/2018/10/28/Mac%E7%8E%AF%E5%A2%83%E4%B8%8Bmysql%E6%9C%8D%E5%8A%A1%E6%97%A0%E6%B3%95%E6%AD%A3%E5%B8%B8%E5%90%AF%E5%8A%A8/"/>
      <url>/2018/10/28/Mac%E7%8E%AF%E5%A2%83%E4%B8%8Bmysql%E6%9C%8D%E5%8A%A1%E6%97%A0%E6%B3%95%E6%AD%A3%E5%B8%B8%E5%90%AF%E5%8A%A8/</url>
      
        <content type="html"><![CDATA[<ul><li>sudo chown -RL root:mysql /usr/local/mysql<a id="more"></a></li><li>sudo chown -RL mysql:mysql /usr/local/mysql/data</li><li>sudo /usr/local/mysql/support-files/mysql.server start</li></ul>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
